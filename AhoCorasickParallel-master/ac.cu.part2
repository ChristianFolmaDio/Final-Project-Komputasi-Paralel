// Bagian 2 dari ac.cu

// Fungsi untuk membuat texture object
cudaTextureObject_t createTextureObject(int* data, size_t size) {
    cudaResourceDesc resDesc;
    memset(&resDesc, 0, sizeof(resDesc));
    resDesc.resType = cudaResourceTypeLinear;
    resDesc.res.linear.devPtr = data;
    resDesc.res.linear.desc = cudaCreateChannelDesc<int>();
    resDesc.res.linear.sizeInBytes = size;

    cudaTextureDesc texDesc;
    memset(&texDesc, 0, sizeof(texDesc));
    texDesc.readMode = cudaReadModeElementType;

    cudaTextureObject_t texObj;
    cudaCreateTextureObject(&texObj, &resDesc, &texDesc, NULL);
    return texObj;
}

// Fungsi untuk membuat texture objects sebelum kernel dipanggil
void createTextureObjectsWrapper(int* dfa, int* fail_state, int* state_final) {
    tex_dfa = createTextureObject(dfa, NUM_ROWS * NUM_COLS * sizeof(int));
    tex_fail_state = createTextureObject(fail_state, NUM_ROWS * sizeof(int));
    tex_state_final = createTextureObject(state_final, NUM_ROWS * sizeof(int));
}

// Fungsi untuk menghancurkan texture objects setelah kernel selesai
void destroyTextureObjectsWrapper() {
    cudaDestroyTextureObject(tex_dfa);
    cudaDestroyTextureObject(tex_fail_state);
    cudaDestroyTextureObject(tex_state_final);
}

// [Rest of the parallel implementation functions...]
